////  APIService.swift//  SampleApIWithSolidMVVMSwiftUIApp////  Created by user260588 on 12/24/24.//import Foundationprotocol APIService {    func fetchCatImages(limit: Int) async throws -> [Animal]}class APIServiceImpl: APIService {    private let baseURL = "https://api.thecatapi.com/v1/images/search?limit="        func fetchCatImages(limit: Int) async throws -> [Animal] {        let urlString = baseURL + "\(limit)"        guard let url = URL(string: urlString) else {            throw NetworkError.invalidURL        }                let (data, response) = try await URLSession.shared.data(from: url)                guard let httpResponse = response as? HTTPURLResponse, httpResponse.statusCode == 200 else {            throw NetworkError.invalidResponse        }                let decodedResponse = try JSONDecoder().decode([Animal].self, from: data)        return decodedResponse    }}enum NetworkError: Error {    case invalidURL    case invalidResponse    case decodingError}