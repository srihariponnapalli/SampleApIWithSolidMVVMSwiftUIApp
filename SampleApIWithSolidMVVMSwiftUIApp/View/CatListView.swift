////  CatListView.swift//  SampleApIWithSolidMVVMSwiftUIApp////  Created by user260588 on 12/24/24.//import SwiftUIstruct CatListView: View {    @StateObject private var viewModel = CatViewModel()        var body: some View {        NavigationView {            VStack {                if viewModel.isLoading {                    ProgressView("Loading...")                } else if let errorMessage = viewModel.errorMessage {                    Text(errorMessage)                        .foregroundColor(.red)                        .padding()                } else {                    List(viewModel.cats) { cat in                        NavigationLink(destination: CatDetailView(cat: cat)) {                            CatRowView(cat: cat)                        }                    }                }            }            .onAppear {                viewModel.fetchCatImages()            }            .navigationTitle("Cat Images")        }    }}struct CatRowView: View {    let cat: Animal        var body: some View {        HStack {            AsyncImage(url: URL(string: cat.url)) { phase in                switch phase {                case .empty:                    ProgressView()                case .success(let image):                    image.resizable()                        .scaledToFit()                        .frame(width: 60, height: 60)                case .failure:                    Image(systemName: "xmark.circle.fill")                        .resizable()                        .frame(width: 60, height: 60)                @unknown default:                    EmptyView()                }            }                        VStack(alignment: .leading) {                Text("ID: \(cat.id)")                    .font(.subheadline)                    .foregroundColor(.gray)                Text("Size: \(cat.width) x \(cat.height)")                    .font(.subheadline)                    .foregroundColor(.gray)            }            .padding(.leading, 10)        }    }}struct ContentView_Previews: PreviewProvider {    static var previews: some View {        CatListView()            .preferredColorScheme(.light)    }}